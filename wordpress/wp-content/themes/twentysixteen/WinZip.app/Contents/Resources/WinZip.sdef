<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">


<dictionary title="MacZip Terminology">

	<suite name="Standard Suite" code="????" description="Common classes and commands for all applications.">
        
		<command name="open" code="aevtodoc" description="Open a document.">
			<direct-parameter description="The file(s) to be opened.">
				<type type="file" list="yes"/>
			</direct-parameter>
		</command>
        
		<enumeration name="save options" code="savo">
			<enumerator name="yes" code="yes " description="Save the file."/>
			<enumerator name="no" code="no  " description="Do not save the file."/>
			<enumerator name="ask" code="ask " description="Ask the user whether or not to save the file."/>
		</enumeration>
        
		<command name="close" code="coreclos" description="Close a document.">
			<cocoa class="NSCloseCommand"/>
			<direct-parameter type="specifier" description="the document(s) or window(s) to close."/>
			<parameter name="saving" code="savo" type="save options" optional="yes" description="Should changes be saved before closing?">
				<cocoa key="SaveOptions"/>
			</parameter>
			<parameter name="saving in" code="kfil" type="file" optional="yes" description="The file in which to save the document, if so.">
				<cocoa key="File"/>
			</parameter>
		</command>
        
		<command name="save" code="coresave" description="Save a document.">
			<direct-parameter type="specifier" description="The document(s) or window(s) to save."/>
			<parameter name="in" code="kfil" type="file" optional="yes" description="The file in which to save the document.">
				<cocoa key="File"/>
			</parameter>
			<parameter name="as" code="fltp" type="saveable file format" optional="yes" description="The file format to use.">
				<cocoa key="FileType"/>
			</parameter>
		</command>
        
		<enumeration name="printing error handling" code="enum">
			<enumerator name="standard" code="lwst" description="Standard PostScript error handling">
				<cocoa boolean-value="NO"/>
			</enumerator>
			<enumerator name="detailed" code="lwdt" description="print a detailed report of PostScript errors">
				<cocoa boolean-value="YES"/>
			</enumerator>
		</enumeration>
        
		<record-type name="print settings" code="pset">
			<property name="copies" code="lwcp" type="integer" description="the number of copies of a document to be printed">
				<cocoa key="NSCopies"/>
			</property>
			<property name="collating" code="lwcl" type="boolean" description="Should printed copies be collated?">
				<cocoa key="NSMustCollate"/>
			</property>
			<property name="starting page" code="lwfp" type="integer" description="the first page of the document to be printed">
				<cocoa key="NSFirstPage"/>
			</property>
			<property name="ending page" code="lwlp" type="integer" description="the last page of the document to be printed">
				<cocoa key="NSLastPage"/>
			</property>
			<property name="pages across" code="lwla" type="integer" description="number of logical pages laid across a physical page">
				<cocoa key="NSPagesAcross"/>
			</property>
			<property name="pages down" code="lwld" type="integer" description="number of logical pages laid out down a physical page">
				<cocoa key="NSPagesDown"/>
			</property>
			<property name="requested print time" code="lwqt" type="date" description="the time at which the desktop printer should print the document">
				<cocoa key="NSPrintTime"/>
			</property>
			<property name="error handling" code="lweh" type="printing error handling" description="how errors are handled">
				<cocoa key="NSDetailedErrorReporting"/>
			</property>
			<property name="fax number" code="faxn" type="text" description="for fax number">
				<cocoa key="NSFaxNumber"/>
			</property>
			<property name="target printer" code="trpr" type="text" description="for target printer">
				<cocoa key="NSPrinterName"/>
			</property>
		</record-type>
        
		<command name="print" code="aevtpdoc" description="Print a document.">
			<direct-parameter description="The file(s), document(s), or window(s) to be printed.">
				<type type="file" list="yes"/>
				<type type="specifier"/>
			</direct-parameter>
			<parameter name="with properties" code="prdt" type="print settings" optional="yes" description="The print settings to use.">
				<cocoa key="PrintSettings"/>
			</parameter>
			<parameter name="print dialog" code="pdlg" type="boolean" optional="yes" description="Should the application show the print dialog?">
				<cocoa key="ShowPrintDialog"/>
			</parameter>
		</command>
        
		<command name="quit" code="aevtquit" description="Quit the application.">
			<cocoa class="NSQuitCommand"/>
			<parameter name="saving" code="savo" type="save options" optional="yes" description="Should changes be saved before quitting?">
				<cocoa key="SaveOptions"/>
			</parameter>
		</command>
        
		<command name="count" code="corecnte" description="Return the number of elements of a particular class within an object.">
			<cocoa class="NSCountCommand"/>
			<direct-parameter type="specifier" description="The objects to be counted."/>
			<parameter name="each" code="kocl" type="type" optional="yes" description="The class of objects to be counted." hidden="yes">
				<cocoa key="ObjectClass"/>
			</parameter>
			<result type="integer" description="The count."/>
		</command>
        
		<command name="delete" code="coredelo" description="Delete an object.">
			<cocoa class="NSDeleteCommand"/>
			<direct-parameter type="specifier" description="The object(s) to delete."/>
		</command>
        
		<command name="duplicate" code="coreclon" description="Copy an object.">
			<cocoa class="NSCloneCommand"/>
			<direct-parameter type="specifier" description="The object(s) to copy."/>
			<parameter name="to" code="insh" type="location specifier" description="The location for the new copy or copies." optional="yes">
				<cocoa key="ToLocation"/>
			</parameter>
			<parameter name="with properties" code="prdt" type="record" description="Properties to set in the new copy or copies right away." optional="yes">
				<cocoa key="WithProperties"/>
			</parameter>
		</command>
        
		<command name="exists" code="coredoex" description="Verify that an object exists.">
			<cocoa class="NSExistsCommand"/>
			<direct-parameter type="any" description="The object(s) to check."/>
			<result type="boolean" description="Did the object(s) exist?"/>
		</command>
        
		<command name="make" code="corecrel" description="Create a new object.">
			<cocoa class="NSCreateCommand"/>
			<parameter name="new" code="kocl" type="type" description="The class of the new object.">
				<cocoa key="ObjectClass"/>
			</parameter>
			<parameter name="at" code="insh" type="location specifier" optional="yes" description="The location at which to insert the object.">
				<cocoa key="Location"/>
			</parameter>
			<parameter name="with data" code="data" type="any" optional="yes" description="The initial contents of the object.">
				<cocoa key="ObjectData"/>
			</parameter>
			<parameter name="with properties" code="prdt" type="record" optional="yes" description="The initial values for properties of the object.">
				<cocoa key="KeyDictionary"/>
			</parameter>
			<result type="specifier" description="The new object."/>
		</command>
        
		<command name="move" code="coremove" description="Move an object to a new location.">
			<cocoa class="NSMoveCommand"/>
			<direct-parameter type="specifier" description="The object(s) to move."/>
			<parameter name="to" code="insh" type="location specifier" description="The new location for the object(s).">
				<cocoa key="ToLocation"/>
			</parameter>
		</command>
   
		<class name="window" code="cwin" description="A window.">
			<cocoa class="NSWindow"/>
			<property name="name" code="pnam" type="text" access="r" description="The title of the window.">
				<cocoa key="title"/>
			</property>
			<property name="id" code="ID  " type="integer" access="r" description="The unique identifier of the window.">
				<cocoa key="uniqueID"/>
			</property>
			<property name="index" code="pidx" type="integer" description="The index of the window, ordered front to back.">
				<cocoa key="orderedIndex"/>
			</property>
			<property name="bounds" code="pbnd" type="rectangle" description="The bounding rectangle of the window.">
				<cocoa key="boundsAsQDRect"/>
			</property>
			<property name="closeable" code="hclb" type="boolean" access="r" description="Does the window have a close button?">
				<cocoa key="hasCloseBox"/>
			</property>
			<property name="miniaturizable" code="ismn" type="boolean" access="r" description="Does the window have a minimize button?">
				<cocoa key="isMiniaturizable"/>
			</property>
			<property name="miniaturized" code="pmnd" type="boolean" description="Is the window minimized right now?">
				<cocoa key="isMiniaturized"/>
			</property>
			<property name="resizable" code="prsz" type="boolean" access="r" description="Can the window be resized?">
				<cocoa key="isResizable"/>
			</property>
			<property name="visible" code="pvis" type="boolean" description="Is the window visible right now?">
				<cocoa key="isVisible"/>
			</property>
			<property name="zoomable" code="iszm" type="boolean" access="r" description="Does the window have a zoom button?">
				<cocoa key="isZoomable"/>
			</property>
			<property name="zoomed" code="pzum" type="boolean" description="Is the window zoomed right now?">
				<cocoa key="isZoomed"/>
			</property>
            
			<property name="document" code="docu" type="document" access="r" description="The document whose contents are displayed in the window."/>
            
			<responds-to name="close">
				<cocoa method="handleCloseScriptCommand:"/>
			</responds-to>
			<responds-to name="print">
				<cocoa method="handlePrintScriptCommand:"/>
			</responds-to>
			<responds-to name="save">
				<cocoa method="handleSaveScriptCommand:"/>
			</responds-to>
		</class>
        
	</suite>

    
    <suite name="MacZip Suite" code="mZip" description="Classes just for the Sketch application.">
       
     <!--
        <enumeration name="file type" code="Ftyp">
            <enumerator name="zip" code="zip " description="Zip File"/>
            <enumerator name="zipx" code="zipx " description="ZipX File"/>
            <enumerator name="lha" code="lha " description="LHA file"/>
        </enumeration>
      -->
        
        <!-- Verb First -->
        <command name="quietly open" code="mZipopen" description="Open an archive without affecting the UI">
			<cocoa class="MZSCOpenQuietly"/>
			
			<direct-parameter description="The zip file to open">
				<type type="file"/>
			</direct-parameter>
            
            <result type="document" description="The zip file document" />
        </command>
        
        <command name="recent archives" code="mZiprecn" description="Return the appllications most recent archives">
            <cocoa class="MZSCRecentDocuments"/>
            
            <result type="any" description="List of paths for the recent archives, separted by '|'" />
        </command>
        
        <command name="new archive" code="mZipnew " description="Create a new zip archive">
            <cocoa class="MZCreateCommand" />
            
            <parameter name="at location" code="Loc " type="file" description="The location path of the zip file">
                <cocoa key="Location" />
            </parameter>
            <parameter name="of type" code="zTyp" type="text" description="The type of archive">
                <cocoa key="Type" />
            </parameter>
            <parameter name="with password" code="Pass" type="text" description="The password of the archive">
                <cocoa key="Password" />
            </parameter>
            <result type="document" />
        </command>
        
        <command name="new user selected archive" code="mZipunew" description="Create an archive based on a user save dialog with encryption accessories">
            <cocoa class="MZSCCreateUserSelectedArchive" />
            
            <parameter name="at location" code="Loc " type="file" description="The location path of the zip file">
                <cocoa key="Location" />
            </parameter>
            <parameter name="with default name" code="DNam" type="text" optional="yes" description="The default name of the new user archive">
                <cocoa key="DefaultName" />
            </parameter>
            
            <result type="document" />
        </command> 
        
        <!-- Object (document) first -->
        <command name="add" code="mZipadd " description="Add a file to the archive">
            <direct-parameter description="The document">
                <type type="document" />
            </direct-parameter>
			<parameter name="files" code="fIle" type="any" list="yes" description="The file(s) to add to the archive">
				<cocoa key="TheFile"/>
			</parameter>
			<parameter name="with password" code="Pass" type="text" list="no" optional="yes" description="The password of the archive.">
				<cocoa key="Password"/>
			</parameter>
        </command> 

        <command name="email" code="mZipemai" description="Email the Archive">
            <direct-parameter description="The archive to email">
                <type type="document" />
            </direct-parameter>
            <parameter name="image size" code="Imgs" type="text" optional="yes" description="The size that images in the archive will be resized to">
                <cocoa key="ImageSize" />
            </parameter>            
        </command>
        
        <command name="email with user selected image size" code="mZipImgs" description="Displays a dialog that lets the user select the image size in the archive">
            <direct-parameter description="The archive to adjust">
                <type type="document" />
            </direct-parameter>    
        </command>
        
        <command name="extract" code="mZipextr" description="Extract all files from the archive">
            <direct-parameter description="The archive to extract from">
                <type type="document" />
            </direct-parameter>
            <parameter name="to directory" code="DDir" type="file" optional="yes" description="The destination directory where all files will be extracted to.">
                <cocoa key="Destination" />
            </parameter>
			<parameter name="with password" code="Pass" type="text" list="no" optional="yes" description="The password of the archive.">
				<cocoa key="Password"/>
			</parameter>
        </command>
    
        <command name="choose an archive" code="mZipchoo" description="Choose an archive file for subsequent adds">
            <cocoa class="MZSCChooseFile" />
            <result type="document" />
        </command>
        
        <command name="choose a recent archive" code="mZipchrc" description="Choose a recent archive file for subsequent adds">
            <cocoa class="MZSCChooseRecentFile" />
            <result type="document" />
        </command>
        
        <command name="email archive" code="mZipchoE" description="Make an archive file for emailing, presenting a dialog to choose options.">
            <cocoa class="MZSCEmailFiles" />
			<parameter name="with files" code="fIle" type="any" list="yes" description="The file(s) to add to the archive">
				<cocoa key="TheFile"/>
			</parameter>
            <result type="document" />
        </command>
        
        <command name="add user selected files" code="mZipchoF" description="Choose files to add to an archive, and add them.">
            <direct-parameter description="The archive to add to">
                <type type="document" />
            </direct-parameter>
        </command>
        
        <command name="flip welcome" code="mZipwelc" description="Toggle the visibility of the welcome screen">
            <cocoa class="MZSCToggleWelcome" />
        </command>
        
        <command name="the name extension of" code="mZipnext" description="Get file extension according to file path.">
            <cocoa class="MZSCGetFileExtension" />
            <direct-parameter description="The file path as a basis for get file extension">
				<type type="file"/>
			</direct-parameter>
            
            <result type="text" description="The file extension" />
        </command>
        
        <command name="folder of item" code="mZipfder" description="Get file folder according to file path.">
            <cocoa class="MZSCGetFileFolder" />
            <direct-parameter description="The file path as a basis for get file folder">
				<type type="file"/>
			</direct-parameter>
            
            <result type="file" description="The file folder" />
        </command>
        
        <command name="name of" code="mZipname" description="Get the name of the file.">
            <cocoa class="MZSCGetFileName" />
            <direct-parameter description="The file path as a basis for get file name">
				<type type="file"/>
			</direct-parameter>
            
            <result type="text" description="The file name" />
        </command>
        
        <command name="delete file" code="mZipfdel" description="Delete file according to file path.">
            <cocoa class="MZSCDeleteFile" />
            <direct-parameter description="The file path as a basis for get file name">
				<type type="file"/>
			</direct-parameter>
        </command>
        
        <command name="nagging" code="mZipnagg" description="Returns true if the license nag screen is visible">
            <cocoa class="MZSCNagging" />
            <result type="boolean" />
        </command>
        
        <class name="application" code="capp"
			description="The application's top-level scripting object.">
			<cocoa class="NSApplication"/>
			<property name="name" code="pnam" type="text" access="r"
            description="The name of the application."/>
			<property name="frontmost" code="pisf" type="boolean" access="r"
				description="Is this the frontmost (active) application?">
				<cocoa key="isActive"/>
			</property>
			<property name="version" code="vers" type="text" access="r"
            description="The version of the application."/>
			<element type="document">
				<cocoa key="orderedDocuments"/>
			</element>
			<element type="window" access="r">
				<cocoa key="orderedWindows"/>
			</element>
			<responds-to name="open">
				<cocoa method="handleOpenScriptCommand:"/>
			</responds-to>
			<responds-to name="print">
				<cocoa method="handlePrintScriptCommand:"/>
			</responds-to>
			<responds-to name="quit">
				<cocoa method="handleQuitScriptCommand:"/>
			</responds-to>

		</class>
        
       <class name="document" code="docu" description="A document.">
			<cocoa class="MZZipArchive"/>
			<property name="name" code="pnam" type="text" access="r"
				description="The document's name.">
				<cocoa key="displayName"/>
			</property>
			<property name="modified" code="imod" type="boolean" access="r"
				description="Has the document been modified since the last save?">
				<cocoa key="isDocumentEdited"/>
			</property>
			<property name="file" code="file" type="file" access="r"
				description="The document's location on disk.">
				<cocoa key="fileURL"/>
			</property>
            <property name="path" code="anme" type="text" access="r" description="The path to the archive.">
                <cocoa key="archiveName"/>
            </property>
            <property name="type" code="tYpe" type="text" access="r" description="The type of archive.">
                <cocoa key="type" />
            </property>
           <property name="images are present" code="hImg" type="boolean" access="r" description="True if the archive contains an image">
               <cocoa key="hasImages" />
           </property>
           <property name="busy" code="iBsy" type="boolean" access="r" description="True if the archive is busy performing an operation.">
               <cocoa key="isBusy" />
           </property>
           <property name="image size" code="zIsi" type="integer" access="r" description="The default image size selection for an archive.">
               <cocoa key="defaultImageSize" />
            </property>
			<responds-to name="close">
				<cocoa method="handleCloseScriptCommandExt:"/>
			</responds-to>
			<responds-to name="print">
				<cocoa method="handlePrintScriptCommand:"/>
			</responds-to>
			<responds-to name="save">
				<cocoa method="handleSaveScriptCommand:"/>
			</responds-to>
           <responds-to name="add">
               <cocoa method="handleAddFileScriptCommand:" />
            </responds-to> 
           <responds-to name="email">
               <cocoa method="handleEmailScriptCommand:" />
            </responds-to>
           <responds-to name="extract">
               <cocoa method="handleExtractScriptCommand:" />
           </responds-to>
           <responds-to name="add user selected files">
               <cocoa method="handleAddUserFilesScriptCommand:" />
            </responds-to>
           <responds-to name="email with user selected image size">
               <cocoa method="handleSetDefaultImageSizeCommand:" />
            </responds-to>
		</class>
  
        
    </suite>


</dictionary>
